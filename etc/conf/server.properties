server.env=dev
## Identity Provider authorization parameters
# examples:
# authorization=enable
# authorization-url=https://accounts.google.com/o/oauth2/auth
# token-url=https://oauth2.googleapis.com/token
# client-id=111122223333-abab1212cdcd3434.apps.googleusercontent.com
# client-secret=GOCSPX-ababfoobarcdcd-5q
server.authorization=disable
server.authorization-url=
server.token-url=
server.client-id=
server.client-secret=
server.redirect-port=

# Define the model storage root.  Cloud storage or file based allowed.
# If no root specified, the current working directory of the server is used.

#storage-root.models=s3://my-s3-bucket/root
#storage-root.models=abfs://file_system@account_name.dfs.core.windows.net/root
#storage-root.models=gs://my-gc-bucket/root
storage-root.models=file:/tmp/ucroot

## S3 Storage Config (Multiple configs can be added by incrementing the index)
s3.bucketPath.0=
s3.region.0=
s3.awsRoleArn.0=
# Optional (If blank, it will use DefaultCredentialsProviderChain)
s3.accessKey.0=
s3.secretKey.0=
# Test Only (If you provide a session token, it will just use those session creds, no downscoping)
s3.sessionToken.0=

## ADLS Storage Config (Multiple configs can be added by incrementing the index)
adls.storageAccountName.0=
adls.tenantId.0=
adls.clientId.0=
adls.clientSecret.0=

## GCS Storage Config (Multiple configs can be added by incrementing the index)
gcs.bucketPath.0=
# Optional (If blank, it will use Default Application chain to find credentials)
gcs.jsonKeyFilePath.0=